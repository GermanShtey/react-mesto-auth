{"ast":null,"code":"var _jsxFileName = \"/Users/german/dev/yandex/mesto-react/src/components/EditAvatarPopup.js\";\nimport PopupWithForm from './PopupWithForm';\nimport React, { useContext, useRef } from \"react\";\nimport { TextForSubmitBtn } from \"../contexts/TextForSubmitBtn\";\nexport const EditAvatarPopup = ({\n  isOpen,\n  onClose,\n  onUpdateAvatar\n}) => {\n  const avatarRef = useRef();\n  const textForSubmitBtn = useContext(TextForSubmitBtn); //обработчик события submit\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onUpdateAvatar({\n      avatar: avatarRef.current.value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(PopupWithForm, {\n    name: \"avatar\",\n    title: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n    isOpen: isOpen,\n    onClose: onClose,\n    onSubmit: handleSubmit,\n    textSubmitBtn: textForSubmitBtn.save,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"popup__field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"*/}\", /*#__PURE__*/React.createElement(\"input\", {\n    ref: avatarRef,\n    type: \"url\",\n    className: \"popup__input popup__input_type_link\",\n    name: \"link\",\n    placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"popup__error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  })));\n};","map":{"version":3,"sources":["/Users/german/dev/yandex/mesto-react/src/components/EditAvatarPopup.js"],"names":["PopupWithForm","React","useContext","useRef","TextForSubmitBtn","EditAvatarPopup","isOpen","onClose","onUpdateAvatar","avatarRef","textForSubmitBtn","handleSubmit","e","preventDefault","avatar","current","value","save"],"mappings":";AAAA,OAAOA,aAAP,MAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAeC,UAAf,EAA2BC,MAA3B,QAAwC,OAAxC;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AAEA,OAAO,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA,OAAT;AAAkBC,EAAAA;AAAlB,CAAD,KAAuC;AAEpE,QAAMC,SAAS,GAAGN,MAAM,EAAxB;AACA,QAAMO,gBAAgB,GAAGR,UAAU,CAACE,gBAAD,CAAnC,CAHoE,CAKpE;;AACA,QAAMO,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AAEAL,IAAAA,cAAc,CAAC;AACbM,MAAAA,MAAM,EAAEL,SAAS,CAACM,OAAV,CAAkBC;AADb,KAAD,CAAd;AAGD,GAND;;AAQA,sBACE,oBAAC,aAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAC,uFAFR;AAGE,IAAA,MAAM,EAAEV,MAHV;AAIE,IAAA,OAAO,EAAEC,OAJX;AAKE,IAAA,QAAQ,EAAEI,YALZ;AAME,IAAA,aAAa,EAAED,gBAAgB,CAACO,IANlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AAAO,IAAA,SAAS,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACE;AACE,IAAA,GAAG,EAAER,SADP;AAEE,IAAA,IAAI,EAAC,KAFP;AAGE,IAAA,SAAS,EAAC,qCAHZ;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,WAAW,EAAC,oGALd;AAME,IAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CARF,CADF;AAqBD,CAnCM","sourcesContent":["import PopupWithForm from './PopupWithForm'\nimport React, {useContext, useRef} from \"react\";\nimport { TextForSubmitBtn } from \"../contexts/TextForSubmitBtn\";\n\nexport const EditAvatarPopup = ({isOpen, onClose, onUpdateAvatar}) => {\n\n  const avatarRef = useRef();\n  const textForSubmitBtn = useContext(TextForSubmitBtn);\n  \n  //обработчик события submit\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    onUpdateAvatar({\n      avatar: avatarRef.current.value,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      name=\"avatar\"\n      title=\"Обновить аватар\"\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      textSubmitBtn={textForSubmitBtn.save}\n    >\n      <label className=\"popup__field\">*/}\n        <input\n          ref={avatarRef}\n          type=\"url\"\n          className=\"popup__input popup__input_type_link\"\n          name=\"link\"\n          placeholder=\"Ссылка на картинку\"\n          required />\n        <span className=\"popup__error\"></span>\n      </label>\n    </PopupWithForm>\n  );\n}"]},"metadata":{},"sourceType":"module"}