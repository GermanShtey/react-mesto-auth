{"ast":null,"code":"class Api {\n  constructor({\n    baseUrl,\n    headers\n  }) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  _handleOriginal(res) {\n    if (!res.ok) {\n      return Promise.reject(`Error: ${res.status}`);\n    }\n\n    return res.json();\n  }\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    }).then(res => this._handleOriginal(res));\n  }\n\n  _getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(res => this._handleOriginal(res));\n  }\n\n  getAppInfo() {\n    return Promise.all([this._getInitialCards(), this.getUserInfo()]);\n  }\n\n  createCard(data) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(res => this._handleOriginal(res));\n  }\n\n  deleteCard(CardId) {\n    return fetch(`${this._baseUrl}/cards/${CardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => this._handleOriginal(res));\n  }\n\n  editUserInfo(data) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(res => this._handleOriginal(res));\n  }\n\n  changeUserPicture(avatar) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(res => this._handleOriginal(res));\n  }\n\n  addLikeCard(cardID) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardID}`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(res => this._handleOriginal(res));\n  }\n\n  deleteLikeCard(cardID) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardID}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => this._handleOriginal(res));\n  }\n\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-14',\n  headers: {\n    authorization: 'c543d785-697b-4b19-aa15-a606529eab61',\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"sources":["/Users/german/dev/mesto-react/src/utils/api.js"],"names":["Api","constructor","baseUrl","headers","_baseUrl","_headers","_handleOriginal","res","ok","Promise","reject","status","json","getUserInfo","fetch","then","_getInitialCards","getAppInfo","all","createCard","data","method","body","JSON","stringify","name","link","deleteCard","CardId","editUserInfo","about","changeUserPicture","avatar","addLikeCard","cardID","deleteLikeCard","api","authorization"],"mappings":"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","sourcesContent":["class Api {\n  constructor({ baseUrl, headers}) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  _handleOriginal(res) {\n    if (!res.ok) {\n      return Promise.reject(`Error: ${res.status}`);\n  }\n    return res.json();\n  }\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    })\n      .then(res => this._handleOriginal(res));\n  }\n\n  _getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    })\n      .then(res => this._handleOriginal(res))\n  }\n\n  getAppInfo() {\n    return Promise.all([this._getInitialCards(), this.getUserInfo()]);\n  }\n\n  createCard(data) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    })\n      .then(res => this._handleOriginal(res));\n  }\n\n  deleteCard(CardId) {\n    return fetch(`${this._baseUrl}/cards/${CardId}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n      .then(res => this._handleOriginal(res));\n  }\n\n  editUserInfo(data) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    })\n      .then(res => this._handleOriginal(res));\n  }\n\n  changeUserPicture(avatar) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({ avatar })\n    })\n      .then(res => this._handleOriginal(res));\n  }\n\n  addLikeCard(cardID) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardID}`, {\n      method: 'PUT',\n      headers: this._headers\n    })\n      .then(res => this._handleOriginal(res));\n  }\n\n  deleteLikeCard(cardID) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardID}`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n      .then(res => this._handleOriginal(res));\n  }\n\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-14',\n  headers: {\n    authorization: 'c543d785-697b-4b19-aa15-a606529eab61',\n    'Content-Type': 'application/json'\n  }\n});\n\nexport default api;"]},"metadata":{},"sourceType":"module"}