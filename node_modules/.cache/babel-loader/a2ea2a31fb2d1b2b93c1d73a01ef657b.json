{"ast":null,"code":"var _jsxFileName = \"/Users/german/dev/mesto-react/src/components/Main.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Card from './Card';\nimport Preloader from './Preloader';\nimport api from '../utils/api.js';\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { InitialCards } from \"../contexts/initialCards\";\n\nconst Main = ({\n  onAddPlace,\n  onEditAvatar,\n  onEditProfile,\n  onCardClick\n}) => {\n  const currentUser = React.useContext(CurrentUserContext);\n  let cards = React.useContext(InitialCards);\n  const {\n    avatar,\n    about,\n    name,\n    _id\n  } = currentUser;\n  const [isLoading, setIsLoading] = useState(false);\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === _id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card.id, !isLiked).then(newCard => {\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map(c => c._id === card.id ? newCard : c);\n      console.log(cards); // Обновляем стейт\n\n      cards = newCards;\n    });\n  } // useEffect(() => {\n  //   setIsLoading(true);\n  //   api.getAppInfo()\n  //     .then(data => {\n  //       const [initialCards] = data;\n  //\n  //       const items = initialCards.map( card => (\n  //         {\n  //           link: card.link,\n  //           likes: card.likes.length,\n  //           name: card.name,\n  //           id: card._id,\n  //         }\n  //         )\n  //       );\n  //       setCards(items);\n  //     })\n  //     .catch(err => console.log(err))\n  //     .finally(() => setIsLoading(false));\n  // }, []);\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"main\", {\n    className: \"page__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"profile page__profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile__info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile__wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: avatar,\n    alt: \"\\u0444\\u043E\\u0442\\u043E\\u0433\\u0440\\u0430\\u0444\\u0438\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\",\n    className: \"profile__avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"button button_edit-avatar\",\n    onClick: onEditAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    width: \"26\",\n    height: \"26\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M26 3.454L6.77 22.794 3.336 19.29 22.517 0 26 3.454zM0 26l5.102-1.53-3.581-3.453L0 26z\",\n    fill: \"#fff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"profile__name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, name), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"profile__job\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, about), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"button button_edit\",\n    onClick: onEditProfile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"button button_add\",\n    onClick: onAddPlace,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"elements\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"elements__items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, isLoading ? /*#__PURE__*/React.createElement(Preloader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }) : cards.map(card => /*#__PURE__*/React.createElement(Card, {\n    card: card,\n    key: card.id,\n    onCardClick: onCardClick,\n    onCardLike: handleCardLike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 35\n    }\n  }))))));\n};\n\nexport default Main;","map":{"version":3,"sources":["/Users/german/dev/mesto-react/src/components/Main.js"],"names":["React","useState","useEffect","Card","Preloader","api","CurrentUserContext","InitialCards","Main","onAddPlace","onEditAvatar","onEditProfile","onCardClick","currentUser","useContext","cards","avatar","about","name","_id","isLoading","setIsLoading","handleCardLike","card","isLiked","likes","some","i","changeLikeCardStatus","id","then","newCard","newCards","map","c","console","log"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport Card from './Card';\nimport Preloader from './Preloader';\nimport api from '../utils/api.js';\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { InitialCards }  from \"../contexts/initialCards\";\n\nconst Main = ({onAddPlace, onEditAvatar, onEditProfile, onCardClick}) =>  {\n  const currentUser = React.useContext(CurrentUserContext);\n  let cards = React.useContext(InitialCards);\n\n  const {avatar, about, name, _id} = currentUser;\n  const [isLoading, setIsLoading] = useState(false);\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === _id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card.id, !isLiked).then((newCard) => {\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map((c) => c._id === card.id ? newCard : c);\n      console.log(cards)\n      // Обновляем стейт\n      cards = newCards\n    });\n  }\n\n  // useEffect(() => {\n  //   setIsLoading(true);\n  //   api.getAppInfo()\n  //     .then(data => {\n  //       const [initialCards] = data;\n  //\n  //       const items = initialCards.map( card => (\n  //         {\n  //           link: card.link,\n  //           likes: card.likes.length,\n  //           name: card.name,\n  //           id: card._id,\n  //         }\n  //         )\n  //       );\n  //       setCards(items);\n  //     })\n  //     .catch(err => console.log(err))\n  //     .finally(() => setIsLoading(false));\n  // }, []);\n\n  return(\n    <>\n      <main className=\"page__content\">\n        <section className=\"profile page__profile\">\n          <div className=\"profile__info\">\n            <div className=\"profile__wrap\">\n              <img src={avatar} alt=\"фотография пользователя\" className=\"profile__avatar\"/>\n              <button type=\"button\" className=\"button button_edit-avatar\" onClick={onEditAvatar}>\n                <svg width=\"26\" height=\"26\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path d=\"M26 3.454L6.77 22.794 3.336 19.29 22.517 0 26 3.454zM0 26l5.102-1.53-3.581-3.453L0 26z\"\n                        fill=\"#fff\"/>\n                </svg>\n              </button>\n            </div>\n            <div className=\"profile__container\">\n              <h2 className=\"profile__name\">{name}</h2>\n              <p className=\"profile__job\">{about}</p>\n              <button type=\"button\" className=\"button button_edit\" onClick={onEditProfile}></button>\n            </div>\n          </div>\n          <button type=\"button\" className=\"button button_add\" onClick={onAddPlace}></button>\n        </section>\n        <section className=\"elements\">\n          <ul className=\"elements__items\">\n            {\n              isLoading ?\n              <Preloader/>\n              : cards.map(card => <Card card={card} key={card.id} onCardClick={onCardClick} onCardLike={handleCardLike}/>)\n            }\n          </ul>\n        </section>\n      </main>\n\n    </>\n  );\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}