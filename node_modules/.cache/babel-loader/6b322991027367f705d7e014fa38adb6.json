{"ast":null,"code":"var _jsxFileName = \"/Users/german/dev/mesto-react/src/components/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport Preloader from './Preloader';\nimport { EditProfilePopup } from './EditProfilePopup';\nimport { EditAvatarPopup } from './EditAvatarPopup';\nimport { PopupDeleteCard } from './PopupDeleteCard';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/api.js';\nimport { transformCard } from \"../utils/transformCard\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { InitialCards } from \"../contexts/initialCards\";\nimport { AddPlacePopup } from \"./AddPlacePopup\";\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isDeleteCardPopupOpen, setIsDeleteCardPopupOpen] = useState(false);\n  const [isImgPopupOpen, setIsImgPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n  };\n\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\n  };\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\n  };\n\n  const handleDeleteCardClick = () => {\n    setIsDeleteCardPopupOpen(!isDeleteCardPopupOpen);\n  };\n\n  const handleImgCardClick = () => {\n    setIsImgPopupOpen(!isImgPopupOpen);\n  };\n\n  const closeAllPopups = () => {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsDeleteCardPopupOpen(false);\n    setIsImgPopupOpen(false);\n    setSelectedCard(null);\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    api.getAppInfo().then(data => {\n      const [initialCards, currentUserData] = data;\n      setCurrentUser(currentUserData);\n      const items = initialCards.map(card => transformCard(card));\n      setCards(items);\n    }).catch(err => console.log(err)).finally(() => setIsLoading(false));\n  }, []); //обновляем данные пользователя\n\n  const handleUpdateUser = data => {\n    api.editUserInfo(data).then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }; //обновляем автар\n\n\n  const handleUpdateAvatar = avatar => {\n    api.changeUserPicture(avatar).then(avatar => {\n      setCurrentUser(avatar);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }; //функция лайков и дизлайков\n\n\n  const handleCardLike = card => {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map(c => c._id === card._id ? newCard : c); // Обновляем стейт\n\n      setCards(newCards);\n    }).catch(err => console.log(err));\n  }; //обработчик добавления новых карточек\n\n\n  const handleAddPlaceSubmit = newCard => {\n    api.createCard(newCard).then(newCard => {\n      const newItem = transformCard(newCard);\n      setCards([...cards, newItem]);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }; //обработчик удаления карточек\n\n\n  const handleCardDelete = card => {\n    api.deleteCard(card._id).then(() => {\n      const newCards = cards.filter(c => c._id !== card._id);\n      setCards(newCards);\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/React.createElement(InitialCards.Provider, {\n    value: cards,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CurrentUserContext.Provider, {\n    value: currentUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }), isLoading ? /*#__PURE__*/React.createElement(Preloader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(Main, {\n    onEditAvatar: handleEditAvatarClick,\n    onEditProfile: handleEditProfileClick,\n    onAddPlace: handleAddPlaceClick,\n    onPopupDeleteCard: handleDeleteCardClick,\n    onPopupImg: handleImgCardClick,\n    onCardClick: setSelectedCard,\n    onCardLike: handleCardLike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(EditProfilePopup, {\n    isOpen: isEditProfilePopupOpen,\n    onClose: closeAllPopups,\n    onUpdateUser: handleUpdateUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(EditAvatarPopup, {\n    isOpen: isEditAvatarPopupOpen,\n    onClose: closeAllPopups,\n    onUpdateAvatar: handleUpdateAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(AddPlacePopup, {\n    isOpen: isAddPlacePopupOpen,\n    onClose: closeAllPopups,\n    onAddPlace: handleAddPlaceSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(PopupDeleteCard, {\n    isOpen: isDeleteCardPopupOpen,\n    onClose: closeAllPopups,\n    card: selectedCard,\n    onCardDelete: handleCardDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ImagePopup, {\n    isOpen: isImgPopupOpen,\n    onClose: closeAllPopups,\n    card: selectedCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/german/dev/mesto-react/src/components/App.js"],"names":["React","useEffect","useState","Header","Main","Footer","Preloader","EditProfilePopup","EditAvatarPopup","PopupDeleteCard","ImagePopup","api","transformCard","CurrentUserContext","InitialCards","AddPlacePopup","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isDeleteCardPopupOpen","setIsDeleteCardPopupOpen","isImgPopupOpen","setIsImgPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","isLoading","setIsLoading","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleDeleteCardClick","handleImgCardClick","closeAllPopups","getAppInfo","then","data","initialCards","currentUserData","items","map","card","catch","err","console","log","finally","handleUpdateUser","editUserInfo","handleUpdateAvatar","avatar","changeUserPicture","handleCardLike","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","newCards","c","handleAddPlaceSubmit","createCard","newItem","handleCardDelete","deleteCard","filter"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport Preloader from './Preloader';\nimport { EditProfilePopup } from './EditProfilePopup';\nimport { EditAvatarPopup } from './EditAvatarPopup';\nimport { PopupDeleteCard} from './PopupDeleteCard';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/api.js';\nimport {transformCard} from \"../utils/transformCard\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { InitialCards } from \"../contexts/initialCards\";\nimport { AddPlacePopup } from \"./AddPlacePopup\";\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isDeleteCardPopupOpen, setIsDeleteCardPopupOpen] = useState(false);\n  const [isImgPopupOpen, setIsImgPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n  }\n\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\n  }\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\n  }\n\n  const handleDeleteCardClick = () => {\n    setIsDeleteCardPopupOpen(!isDeleteCardPopupOpen);\n  }\n\n  const handleImgCardClick = () => {\n    setIsImgPopupOpen(!isImgPopupOpen);\n  }\n\n  const closeAllPopups = () => {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsDeleteCardPopupOpen(false);\n    setIsImgPopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  useEffect(() => {\n    setIsLoading(true);\n    api.getAppInfo()\n      .then(data => {\n        const [initialCards, currentUserData ] = data;\n        setCurrentUser(currentUserData);\n        const items = initialCards.map( card => transformCard(card));\n        setCards(items);\n      })\n      .catch(err => console.log(err))\n      .finally(() => setIsLoading(false));\n  }, [])\n\n  //обновляем данные пользователя\n  const handleUpdateUser = (data) => {\n    api.editUserInfo(data)\n      .then(data => {\n        setCurrentUser(data);\n        closeAllPopups();\n      })\n      .catch(err => console.log(err))\n  }\n\n  //обновляем автар\n  const handleUpdateAvatar = (avatar) => {\n    api.changeUserPicture(avatar)\n      .then( avatar => {\n        setCurrentUser(avatar);\n        closeAllPopups()\n      })\n      .catch(err => console.log(err))\n  }\n\n  //функция лайков и дизлайков\n  const handleCardLike = (card) => {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map(c => c._id === card._id ? newCard : c);\n\n      // Обновляем стейт\n      setCards(newCards)\n    })\n      .catch(err => console.log(err))\n  }\n\n  //обработчик добавления новых карточек\n  const handleAddPlaceSubmit = (newCard) => {\n    api.createCard(newCard)\n      .then(newCard => {\n        const newItem = transformCard(newCard);\n        setCards([...cards, newItem]);\n        closeAllPopups();\n      })\n      .catch(err => console.log(err))\n  }\n\n  //обработчик удаления карточек\n  const handleCardDelete = (card) => {\n    api.deleteCard(card._id)\n      .then(() => {\n        const newCards = cards.filter(c => c._id !== card._id)\n\n        setCards(newCards)\n      })\n      .catch(err => console.log(err))\n  }\n\n  return (\n    <InitialCards.Provider value={cards}>\n      <CurrentUserContext.Provider value={currentUser}>\n        <div className=\"page\">\n          <Header />\n          {isLoading ?\n            <Preloader /> :\n            <Main\n            onEditAvatar={handleEditAvatarClick}\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onPopupDeleteCard={handleDeleteCardClick}\n            onPopupImg={handleImgCardClick}\n            onCardClick={setSelectedCard}\n            onCardLike={handleCardLike}\n          />}\n          <Footer />\n\n          <EditProfilePopup\n            isOpen={isEditProfilePopupOpen}\n            onClose={closeAllPopups}\n            onUpdateUser={handleUpdateUser}\n          />\n\n          <EditAvatarPopup\n            isOpen={isEditAvatarPopupOpen}\n            onClose={closeAllPopups}\n            onUpdateAvatar={handleUpdateAvatar}\n          />\n\n          <AddPlacePopup\n            isOpen={isAddPlacePopupOpen}\n            onClose={closeAllPopups}\n            onAddPlace={handleAddPlaceSubmit}\n          />\n\n          <PopupDeleteCard\n            isOpen={isDeleteCardPopupOpen}\n            onClose={closeAllPopups}\n            card={selectedCard}\n            onCardDelete={handleCardDelete}\n            />\n\n          <ImagePopup\n            isOpen={isImgPopupOpen}\n            onClose={closeAllPopups}\n            card={selectedCard}\n          />\n\n        </div>\n      </CurrentUserContext.Provider>\n    </InitialCards.Provider>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}