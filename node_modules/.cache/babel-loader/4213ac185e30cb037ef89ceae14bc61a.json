{"ast":null,"code":"var _jsxFileName = \"/Users/german/dev/mesto-react/src/components/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport { EditProfilePopup } from './EditProfilePopup';\nimport { EditAvatarPopup } from './EditAvatarPopup';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/api.js';\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { InitialCards } from \"../contexts/initialCards\";\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n  };\n\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\n  };\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\n  };\n\n  const closeAllPopups = () => {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard(null);\n  };\n\n  useEffect(() => {\n    api.getAppInfo().then(data => {\n      const [initialCards, currentUserData] = data;\n      setCurrentUser(currentUserData);\n      const items = initialCards.map(card => ({\n        link: card.link,\n        likes: card.likes,\n        name: card.name,\n        _id: card._id,\n        ownerId: card.owner._id\n      }));\n      setCards(items);\n    }).catch(err => console.log(err));\n  }, []); //обновляем данные пользователя\n\n  const handleUpdateUser = data => {\n    api.editUserInfo(data).then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    });\n  }; //обновляем автар\n\n\n  const handleUpdateAvatar = avatar => {\n    console.log(' clicked');\n  }; //функция лайков и дизлайков\n\n\n  const handleCardLike = card => {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map(c => c._id === card._id ? newCard : c); // Обновляем стейт\n\n      setCards(newCards);\n    });\n  }; //обработчик удаления карточек\n\n\n  const handleCardDelete = card => {\n    api.deleteCard(card._id).then(() => {\n      const newCards = cards.filter(c => c._id !== card._id);\n      setCards(newCards);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(InitialCards.Provider, {\n    value: cards,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CurrentUserContext.Provider, {\n    value: currentUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Main, {\n    onEditAvatar: handleEditAvatarClick,\n    onEditProfile: handleEditProfileClick,\n    onAddPlace: handleAddPlaceClick,\n    onCardClick: setSelectedCard,\n    onCardLike: handleCardLike,\n    onCardDelete: handleCardDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(EditProfilePopup, {\n    isOpen: isEditProfilePopupOpen,\n    onClose: closeAllPopups,\n    onUpdateUser: handleUpdateUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(EditAvatarPopup, {\n    isOpen: isEditAvatarPopupOpen,\n    onClose: closeAllPopups,\n    onUpdateAvatar: handleUpdateAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(PopupWithForm, {\n    name: \"elements\",\n    title: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\",\n    isOpen: isAddPlacePopupOpen,\n    onClose: closeAllPopups,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"popup__field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"popup__input popup__input_type_place\",\n    name: \"name\",\n    placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n    minLength: \"1\",\n    maxLength: \"30\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"popup__error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"popup__field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"url\",\n    className: \"popup__input popup__input_type_link\",\n    name: \"link\",\n    placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"popup__error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(PopupWithForm, {\n    name: \"card-delete\",\n    title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n    onClose: closeAllPopups,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"popup__field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, \"*/}\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"url\",\n    className: \"popup__input popup__input_type_link\",\n    name: \"link\",\n    placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"popup__error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(ImagePopup, {\n    card: selectedCard,\n    onClose: closeAllPopups,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/german/dev/mesto-react/src/components/App.js"],"names":["React","useEffect","useState","Header","Main","Footer","PopupWithForm","EditProfilePopup","EditAvatarPopup","ImagePopup","api","CurrentUserContext","InitialCards","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","closeAllPopups","getAppInfo","then","data","initialCards","currentUserData","items","map","card","link","likes","name","_id","ownerId","owner","catch","err","console","log","handleUpdateUser","editUserInfo","handleUpdateAvatar","avatar","handleCardLike","isLiked","some","i","changeLikeCardStatus","newCard","newCards","c","handleCardDelete","deleteCard","filter"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport { EditProfilePopup } from './EditProfilePopup';\nimport { EditAvatarPopup } from './EditAvatarPopup';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/api.js';\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { InitialCards } from \"../contexts/initialCards\";\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n  }\n\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\n  }\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\n  }\n\n\n  const closeAllPopups = () => {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  useEffect(() => {\n    api.getAppInfo()\n      .then(data => {\n        const [initialCards, currentUserData ] = data;\n        setCurrentUser(currentUserData);\n\n        const items = initialCards.map( card => (\n                  {\n                    link: card.link,\n                    likes: card.likes,\n                    name: card.name,\n                    _id: card._id,\n                    ownerId: card.owner._id\n                  }\n                  )\n                );\n                setCards(items);\n      })\n      .catch(err => console.log(err))\n  }, [])\n\n  //обновляем данные пользователя\n  const handleUpdateUser = (data) => {\n    api.editUserInfo(data)\n      .then(data => {\n        setCurrentUser(data);\n        closeAllPopups();\n      }\n    )\n  }\n\n  //обновляем автар\n  const handleUpdateAvatar = (avatar) => {\n    console.log(' clicked')\n  }\n\n  //функция лайков и дизлайков\n  const handleCardLike = (card) => {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map(c => c._id === card._id ? newCard : c);\n\n      // Обновляем стейт\n      setCards(newCards)\n    });\n  }\n\n  //обработчик удаления карточек\n  const handleCardDelete = (card) => {\n    api.deleteCard(card._id)\n      .then(() => {\n        const newCards = cards.filter(c => c._id !== card._id)\n\n        setCards(newCards)\n      });\n  }\n\n  return (\n    <InitialCards.Provider value={cards}>\n      <CurrentUserContext.Provider value={currentUser}>\n        <div className=\"page\">\n          <Header />\n          <Main\n            onEditAvatar={handleEditAvatarClick}\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onCardClick={setSelectedCard}\n            onCardLike={handleCardLike}\n            onCardDelete={handleCardDelete}\n          />\n          <Footer />\n\n          <EditProfilePopup\n            isOpen={isEditProfilePopupOpen}\n            onClose={closeAllPopups}\n            onUpdateUser={handleUpdateUser}\n          />\n\n          <EditAvatarPopup\n            isOpen={isEditAvatarPopupOpen}\n            onClose={closeAllPopups}\n            onUpdateAvatar={handleUpdateAvatar}\n          />\n\n          <PopupWithForm\n            name=\"elements\"\n            title=\"Новое место\"\n            isOpen={isAddPlacePopupOpen}\n            onClose={closeAllPopups}\n          >\n            <label className=\"popup__field\">\n              <input type=\"text\" className=\"popup__input popup__input_type_place\" name=\"name\"\n                     placeholder=\"Название\"\n                     minLength=\"1\" maxLength=\"30\" required />\n              <span className=\"popup__error\"></span>\n            </label>\n\n            <label className=\"popup__field\">\n              <input type=\"url\" className=\"popup__input popup__input_type_link\" name=\"link\"\n                     placeholder=\"Ссылка на картинку\" required />\n              <span className=\"popup__error\"></span>\n            </label>\n          </PopupWithForm>\n\n          <PopupWithForm\n            name=\"card-delete\"\n            title=\"Вы уверены?\"\n            onClose={closeAllPopups}\n          >\n            <label className=\"popup__field\">*/}\n              <input type=\"url\" className=\"popup__input popup__input_type_link\" name=\"link\"  placeholder=\"Ссылка на картинку\" required />\n              <span className=\"popup__error\"></span>\n            </label>\n          </PopupWithForm>\n\n          <ImagePopup\n            card={selectedCard}\n            onClose={closeAllPopups}\n          />\n\n        </div>\n      </CurrentUserContext.Provider>\n    </InitialCards.Provider>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}