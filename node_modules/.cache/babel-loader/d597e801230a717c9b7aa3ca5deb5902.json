{"ast":null,"code":"import _slicedToArray from\"/Users/german/dev/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import PopupWithForm from'./PopupWithForm';import React,{useState,useEffect,useContext}from\"react\";import{CurrentUserContext}from\"../contexts/CurrentUserContext\";import{TextForSubmitBtn}from\"../contexts/TextForSubmitBtn\";export var EditProfilePopup=function EditProfilePopup(_ref){var isOpen=_ref.isOpen,onClose=_ref.onClose,onUpdateUser=_ref.onUpdateUser;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),description=_useState4[0],setDescription=_useState4[1];var currentUser=React.useContext(CurrentUserContext);var textForSubmitBtn=useContext(TextForSubmitBtn);//при рендеренге заполняются значения о пользователи по умолчанию\nuseEffect(function(){setName(currentUser.name||'');setDescription(currentUser.about||'');},[currentUser]);//обработчик событий в inputs\nvar handleChange=function handleChange(e){var target=e.target;var newName=target.name==='name'?target.value:name;var newDescription=target.name==='description'?target.value:description;setName(newName);setDescription(newDescription);};//обработчик события submit\nvar handleSubmit=function handleSubmit(e){e.preventDefault();// Передаём значения управляемых компонентов во внешний обработчик\nonUpdateUser({name:name,about:description});};return/*#__PURE__*/React.createElement(PopupWithForm,{name:\"profile\",title:\"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",isOpen:isOpen,onClose:onClose,onSubmit:handleSubmit,textSubmitBtn:textForSubmitBtn.save},/*#__PURE__*/React.createElement(\"label\",{className:\"popup__field\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"popup__input popup__input_type_name\",name:\"name\",placeholder:\"\\u0412\\u0430\\u0448\\u0435 \\u0438\\u043C\\u044F\",minLength:\"2\",maxLength:\"40\",value:name,onChange:handleChange,required:true}),/*#__PURE__*/React.createElement(\"span\",{className:\"popup__error\"})),/*#__PURE__*/React.createElement(\"label\",{className:\"popup__field\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"popup__input popup__input_type_job\",name:\"description\",value:description,onChange:handleChange,placeholder:\"\\u0412\\u0430\\u0448\\u0430 \\u043F\\u0440\\u043E\\u0444\\u0435\\u0441\\u0441\\u0438\\u044F\",minLength:\"2\",maxLength:\"200\",required:true}),/*#__PURE__*/React.createElement(\"span\",{className:\"popup__error\"})));};","map":{"version":3,"sources":["/Users/german/dev/mesto-react/src/components/EditProfilePopup.js"],"names":["PopupWithForm","React","useState","useEffect","useContext","CurrentUserContext","TextForSubmitBtn","EditProfilePopup","isOpen","onClose","onUpdateUser","name","setName","description","setDescription","currentUser","textForSubmitBtn","about","handleChange","e","target","newName","value","newDescription","handleSubmit","preventDefault","save"],"mappings":"oJAAA,MAAOA,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,CAAoCC,UAApC,KAAqD,OAArD,CACA,OAASC,kBAAT,KAAmC,gCAAnC,CACA,OAASC,gBAAT,KAAiC,8BAAjC,CAEA,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,MAAqC,IAAnCC,CAAAA,MAAmC,MAAnCA,MAAmC,CAA3BC,OAA2B,MAA3BA,OAA2B,CAAlBC,YAAkB,MAAlBA,YAAkB,eAC3CR,QAAQ,CAAC,EAAD,CADmC,wCAC5DS,IAD4D,eACtDC,OADsD,8BAE7BV,QAAQ,CAAC,EAAD,CAFqB,yCAE5DW,WAF4D,eAE/CC,cAF+C,eAGnE,GAAMC,CAAAA,WAAW,CAAGd,KAAK,CAACG,UAAN,CAAiBC,kBAAjB,CAApB,CACA,GAAMW,CAAAA,gBAAgB,CAAGZ,UAAU,CAACE,gBAAD,CAAnC,CAEA;AACAH,SAAS,CAAC,UAAM,CACdS,OAAO,CAACG,WAAW,CAACJ,IAAZ,EAAoB,EAArB,CAAP,CACAG,cAAc,CAACC,WAAW,CAACE,KAAZ,EAAqB,EAAtB,CAAd,CACD,CAHQ,CAGN,CAACF,WAAD,CAHM,CAAT,CAKA;AACA,GAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,CAC1B,GAAMC,CAAAA,MAAM,CAAGD,CAAC,CAACC,MAAjB,CAEA,GAAMC,CAAAA,OAAO,CAAGD,MAAM,CAACT,IAAP,GAAgB,MAAhB,CAAyBS,MAAM,CAACE,KAAhC,CAAwCX,IAAxD,CACA,GAAMY,CAAAA,cAAc,CAAGH,MAAM,CAACT,IAAP,GAAgB,aAAhB,CAAgCS,MAAM,CAACE,KAAvC,CAA+CT,WAAtE,CAEAD,OAAO,CAACS,OAAD,CAAP,CACAP,cAAc,CAACS,cAAD,CAAd,CACD,CARD,CAUA;AACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACL,CAAD,CAAO,CAC1BA,CAAC,CAACM,cAAF,GAEA;AACAf,YAAY,CAAC,CACXC,IAAI,CAAJA,IADW,CAEXM,KAAK,CAAEJ,WAFI,CAAD,CAAZ,CAID,CARD,CAUA,mBACE,oBAAC,aAAD,EACE,IAAI,CAAC,SADP,CAEE,KAAK,CAAC,2HAFR,CAGE,MAAM,CAAEL,MAHV,CAIE,OAAO,CAAEC,OAJX,CAKE,QAAQ,CAAEe,YALZ,CAME,aAAa,CAAER,gBAAgB,CAACU,IANlC,eAQE,6BAAO,SAAS,CAAC,cAAjB,eACE,6BACE,IAAI,CAAC,MADP,CAEE,SAAS,CAAC,qCAFZ,CAGE,IAAI,CAAC,MAHP,CAIE,WAAW,CAAC,6CAJd,CAKE,SAAS,CAAC,GALZ,CAME,SAAS,CAAC,IANZ,CAOE,KAAK,CAAEf,IAPT,CAQE,QAAQ,CAAEO,YARZ,CASE,QAAQ,KATV,EADF,cAWE,4BAAM,SAAS,CAAC,cAAhB,EAXF,CARF,cAqBE,6BAAO,SAAS,CAAC,cAAjB,eACE,6BACE,IAAI,CAAC,MADP,CAEE,SAAS,CAAC,oCAFZ,CAGE,IAAI,CAAC,aAHP,CAIE,KAAK,CAAEL,WAJT,CAKE,QAAQ,CAAEK,YALZ,CAME,WAAW,CAAC,iFANd,CAOE,SAAS,CAAC,GAPZ,CAQE,SAAS,CAAC,KARZ,CASE,QAAQ,KATV,EADF,cAWE,4BAAM,SAAS,CAAC,cAAhB,EAXF,CArBF,CADF,CAqCD,CAvEM","sourcesContent":["import PopupWithForm from './PopupWithForm'\nimport React, {useState, useEffect, useContext} from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { TextForSubmitBtn } from \"../contexts/TextForSubmitBtn\";\n\nexport const EditProfilePopup = ({isOpen, onClose, onUpdateUser}) => {\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const currentUser = React.useContext(CurrentUserContext);\n  const textForSubmitBtn = useContext(TextForSubmitBtn);\n\n  //при рендеренге заполняются значения о пользователи по умолчанию\n  useEffect(() => {\n    setName(currentUser.name || '');\n    setDescription(currentUser.about || '');\n  }, [currentUser]);\n\n  //обработчик событий в inputs\n  const handleChange = (e) => {\n    const target = e.target;\n\n    const newName = target.name === 'name' ? target.value : name;\n    const newDescription = target.name === 'description' ? target.value : description;\n\n    setName(newName);\n    setDescription(newDescription);\n  }\n\n  //обработчик события submit\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Передаём значения управляемых компонентов во внешний обработчик\n    onUpdateUser({\n      name,\n      about: description,\n    });\n  }\n\n  return(\n    <PopupWithForm\n      name=\"profile\"\n      title=\"Редактировать профиль\"\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      textSubmitBtn={textForSubmitBtn.save}\n    >\n      <label className=\"popup__field\">\n        <input\n          type=\"text\"\n          className=\"popup__input popup__input_type_name\"\n          name=\"name\"\n          placeholder=\"Ваше имя\"\n          minLength=\"2\"\n          maxLength=\"40\"\n          value={name}\n          onChange={handleChange}\n          required />\n        <span className=\"popup__error\"></span>\n      </label>\n      <label className=\"popup__field\">\n        <input\n          type=\"text\"\n          className=\"popup__input popup__input_type_job\"\n          name=\"description\"\n          value={description}\n          onChange={handleChange}\n          placeholder=\"Ваша профессия\"\n          minLength=\"2\"\n          maxLength=\"200\"\n          required />\n        <span className=\"popup__error\"></span>\n      </label>\n    </PopupWithForm>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}